<!--
<p class="project-dsc"><small> <strong>Project name:</strong><%#= @project.name %></small></p>
<p class="project-dsc"><small><strong>Description:</strong> <%#= @project.description %></small></p>
<p class="project-dsc"><small><strong>Owner:</strong> <%#= @project.user.email %></small></p>
-->
<div class="container-fluid">
<div class="row">
  <div class="col-md-4 col-sm-4 col-xs-12 project-board" id="backlog">
    <h4 class="board-task-header text-center"><strong>Backlog</strong>
      <button type="button" class="btn btn-xs board-task-header-btn" data-toggle="modal"
        data-target="#modal-add-task">
        <span class="glyphicon glyphicon-plus" aria-hidden="true"
          data-toggle="tooltip" data-placement="left" title="Add Task" >
      </span></button>
      <button type="button" class="btn btn-xs board-task-header-btn" data-toggle="modal"
        data-target="#modal-add-milestone">
        <span class="glyphicon glyphicon-flag" aria-hidden="true"
          data-toggle="tooltip" data-placement="left" title="Add Milestone" >
      </span></button>
    </h4>
    <div class="board-scroll">
      <%= render partial: "task_state_backlog", locals: {state: "Backlog" } %>
    </div>
  </div>
  <div class="col-md-4 col-sm-4 col-xs-6 project-board hidden-xs" id="progress">
    <h4 class="board-task-header text-center"><strong>In Progress</strong></h4>
    <div class="board-scroll">
      <%= render partial: "task_state", locals: {state: "Progress" } %>
    </div>
  </div>
  <div class="col-md-4 col-sm-4 col-xs-6 project-board hidden-xs" id="done">
    <h4 class="board-task-header text-center"><strong>Done</strong></h4>
    <div class="board-scroll">
      <%= render partial: "task_state", locals: {state: "Done" } %>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-12 project-conversation">
    <div class="conversation-box">
      <div class="load-more text-center"></div>
      <div class="conversation-scroll">
        <%= render partial: "project_conversation",
          collection: @project_conversations.sort { |x,y| x.created_at <=> y.created_at } %>
      </div>
      <div class="conversation-add">
        <%= render "add_project_conversation" %>
      </div>
      <div class="hidden">
        <%= paginate @project_conversations %>
      </div>
    </div>
  </div>
</div>
</div>

<!-- Modal -->
<%= render partial: "layouts/modal", locals: {resource: "projects/add_task"} %>
<%= render partial: "layouts/modal", locals: {resource: "projects/add_milestone"} %>
<%= render partial: "layouts/modal", locals: {resource: "edit-task", remote: true} %>
<%= render partial: "layouts/modal", locals: {resource: "edit-milestone", remote: true} %>
<%#= link_to 'Add release', edit_milestone_path(15),
  {:remote => true, 'data-target' => "layouts/modal", 'data-target' => '#modal-edit-task'} %>
<script type="text/javascript">
$(document).ready(function() {
    var usernames = eval("['<%= j(@project.members.pluck(:username).join("', '")).html_safe%>']");
    var username_emails = eval("['<%= j(@project.members.pluck(:email).join("', '")).html_safe%>']");
    var usernames = $.map(usernames,function(value,i) {
      return {'id':i,'username':usernames[i], 'email':username_emails[i]};
    });
    $("#project_conversation_content").atwho({
        at: "@",
        data: usernames,
        insertTpl: "${atwho-at}${username}",
        searchKey: "username",
        displayTpl: "<li>${username} <small>${email}</small></li>",
        limit: 20
    });

    var tasks = eval("['<%= j(@project.task.pluck(:title_digest).join("', '")).html_safe%>']");
    <% task_titles= @project.task.pluck(:title).map {|x| x.gsub(/[\"\']/,"")} %>
    var task_titles = eval("['<%= j(task_titles.join("', '")).html_safe%>']");
    var tasks = $.map(tasks, function(value,i) {
      return {'id':i,'digest':tasks[i], 'title':task_titles[i]};
    });

    $("#project_conversation_content").atwho({
        at: "#",
        data: tasks,
        insertTpl: "${atwho-at}${digest}",
        searchKey: "title",
        displayTpl: "<li>${title} <small>#${digest}</small></li>",
        limit: 100
    });

    var dropped = false;
    $("#project_conversation_content").droppable({
        activeClass: 'active',
        hoverClass:'hovered',
        drop:function(event, ui){
            dropped = true;
            var value = $("#project_conversation_content").val();
            $(event.target).val(value + " #" + ui.draggable.attr('digest'));
        }
    });
});

  var client = new Faye.Client("<%=FAYE_CONFIG[:server]%>");
  client.addExtension({
    outgoing: function(message, callback) {
        message.ext = message.ext || {};
        message.ext.csrfToken = $('meta[name=csrf-token]').attr('content');
        callback(message);
    }
  });

  var public_subscription = client.subscribe("/messages/global", function(message) {
    $.notify({ message: "[Public] " + message.from + " says: " + message.text },
             { type: "info",
               delay: 8000,
               animate: {
                 enter: 'animated shake',
                 exit: 'animated fadeOutUp'
                 },
                mouse_over: "pause"
             });
  });

  var private_subscription = client.subscribe('/messages/private/<%=project_channel @project.id%>', function(data) {
    eval(data);
  });

  private_subscription.then(function() {
    console.log('/messages/private/<%=project_channel @project.id%>');
  });

  public_subscription.then(function() {
    console.log('/messages/public');
  });

  $(".conversation-scroll .task-mention").off('click').click(function(){
      var text = $(this).text().substring(1, $(this).text().length);
      var b = $("tbody[digest=" + text +"]");
      b.children().eq(1).collapse("show");
      b.fadeTo('slow', 0.3).fadeTo('slow', 1.0);
      b.fadeTo('slow', 0.3).fadeTo('slow', 1.0);
      var a = b.parent().parent();
      if(a !== undefined){
          a.animate( { scrollTop: b.offset().top - a.offset().top + a.scrollTop() - 20});
      }
  });

  $(".conversation-scroll .user-mention").off('click').click(function(){
      var text = $(this).text().substring(1, $(this).text().length);
      value = $("#project_conversation_content").val();
      $("#project_conversation_content").val(value + " @" + text + " ").focus();
  });

</script>
